name: Test and Deploy

on:
  push:
    branches: [ main, develop, 'deploy/*' ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18.x'

jobs:
  test:
    name: Test Contracts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Compile contracts
      run: npm run compile

    - name: Run unit tests
      run: npm run test:unit
      env:
        REPORT_GAS: false

    - name: Run integration tests
      run: npm run test:integration
      env:
        REPORT_GAS: false

    - name: Generate coverage report
      run: npm run coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: contracts
        fail_ci_if_error: false

    - name: Run gas tests
      run: npm run test:gas
      env:
        REPORT_GAS: true

    - name: Check contract sizes
      run: npm run size

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          coverage/
          gas-report.txt

  deploy:
    name: Deploy to Amoy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/deploy/amoy'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Compile contracts
      run: npm run compile

    - name: Deploy to Amoy testnet
      run: npm run deploy:amoy
      env:
        DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
        ALCHEMY_AMOY_API_KEY: ${{ secrets.ALCHEMY_AMOY_API_KEY }}
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}

    - name: Verify contracts on Polygonscan
      run: npm run verify
      env:
        POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
      continue-on-error: true

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-artifacts
        path: deployments/

    - name: Comment deployment info on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const deploymentInfo = JSON.parse(
            fs.readFileSync('deployments/latest-amoy.json', 'utf8')
          );

          const comment = `## ðŸš€ Deployment Successful!

          **Network:** Amoy Testnet
          **Deployer:** ${deploymentInfo.deployer}

          ### Contract Addresses:
          - **EventRegistry:** [${deploymentInfo.contracts.EventRegistry.address}](https://amoy.polygonscan.com/address/${deploymentInfo.contracts.EventRegistry.address})
          - **SimpleMarketplace:** [${deploymentInfo.contracts.SimpleMarketplace.address}](https://amoy.polygonscan.com/address/${deploymentInfo.contracts.SimpleMarketplace.address})
          - **TicketNFT:** [${deploymentInfo.contracts.TicketNFT.address}](https://amoy.polygonscan.com/address/${deploymentInfo.contracts.TicketNFT.address})

          Deployed at: ${deploymentInfo.deployedAt}`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Slither
      uses: crytic/slither-action@v0.3.0
      with:
        node-version: ${{ env.NODE_VERSION }}
        slither-args: '--filter-paths "node_modules|contracts/test" --exclude-dependencies'
      continue-on-error: true

    - name: Upload Slither results
      uses: actions/upload-artifact@v4
      with:
        name: slither-results
        path: slither.db.json
