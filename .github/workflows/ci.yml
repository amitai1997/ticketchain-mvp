name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.12'

jobs:
  # Python linting and testing
  python:
    name: Python Lint & Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Format check with black
      run: black --check src/ tests/
      continue-on-error: true

    - name: Lint with flake8
      run: flake8 src/ tests/
      continue-on-error: true

    - name: Run tests with pytest
      run: pytest -q tests/ --cov=src --cov-report=xml
      continue-on-error: true

    - name: Upload Python coverage
      uses: actions/upload-artifact@v4
      with:
        name: python-coverage
        path: coverage.xml

  # Solidity linting and testing
  solidity:
    name: Solidity Lint & Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox solhint
      continue-on-error: true

    - name: Lint contracts
      run: npx solhint 'contracts/**/*.sol'
      continue-on-error: true

    - name: Compile contracts
      run: npx hardhat compile
      continue-on-error: true

    - name: Run contract tests
      run: npx hardhat test --network hardhat
      continue-on-error: true

    - name: Generate coverage report
      run: npx hardhat coverage
      continue-on-error: true

    - name: Upload Solidity coverage
      uses: actions/upload-artifact@v4
      with:
        name: solidity-coverage
        path: coverage.json

  # Security checks
  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Dependabot security scan
      uses: github/super-linter/slim@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH: main
      continue-on-error: true

  # Docker build test
  docker:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test Docker Compose configuration
      run: |
        docker compose version
        docker compose config
      continue-on-error: true

  # Aggregate results
  ci-success:
    name: CI Success
    needs: [python, solidity, security, docker]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Check CI Status
      run: |
        echo "CI pipeline completed"
        echo "Python: ${{ needs.python.result }}"
        echo "Solidity: ${{ needs.solidity.result }}"
        echo "Security: ${{ needs.security.result }}"
        echo "Docker: ${{ needs.docker.result }}"
