[tool.poetry]
name = "ticketchain"
version = "0.1.0"
description = "Blockchain Ticketing Infrastructure SaaS"
authors = ["TicketChain Team <dev@ticketchain.io>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
# Using the latest FastAPI to get starlette 0.40.0+ (fixes CVE-2024-47874)
fastapi = {version = "^0.114.0", allow-prereleases = true, extras = ["all"]}
# starlette = "^0.40.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
pydantic = "^2.6.0"
pydantic-settings = "^2.2.0"
sqlalchemy = "^2.0.28"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
redis = "^5.0.3"
web3 = "^6.16.0"
eth-account = "^0.11.0"
httpx = "^0.27.0"
# Replaced vulnerable python-jose with authlib
# python-jose = {extras = ["cryptography"], version = "^3.3.0"}
authlib = "^1.3.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
# Updated to address CVE-2024-53981
python-multipart = "^0.0.18"
# Known vulnerability: CVE-2024-23342, PVE-2024-64396 - Consider cryptography alternatives
emails = "^0.6"
celery = "^5.3.6"
flower = "^2.0.1"
# Added to replace vulnerable pyjwt dependency
pyjwt = "^2.10.1"
# Updated to fix CVE-2024-12797
cryptography = "^44.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-asyncio = "^0.23.5"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.3"
black = "^24.3.0"
isort = "^5.13.2"
flake8 = "^7.0.0"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
bandit = "^1.7.8"
safety = "^3.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip = [".venv", "venv", "build", "dist"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "dist", "build", ".venv"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.bandit]
targets = ["src"]
skip = ["B101", "B601"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
